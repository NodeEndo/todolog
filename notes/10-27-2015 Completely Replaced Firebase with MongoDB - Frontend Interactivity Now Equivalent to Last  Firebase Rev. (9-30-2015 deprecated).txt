[ADDITIONS]================================================================================================================
-The *Todo, *Done & *Save lists now use MongoDB instead of Firebase for storage|persistence.

-The client|application now receives validation feedback (UX) when the end-user submits their login credentials 
when logging in or registering a Todolog account via Signup, e.g "You've entered an invalid password." 
(did this earlier with Firebase, but now got it working with MongoDb).

-Change Password in the Settings view is now working with MongoDB.

-Logout is now working again.

[IDEA's]
-A "Forgot your password" feature, 
may use Heroku's SendGrid addon for sending an e-mail to the end-user 
containing the randomly generated temporary password.

https://devcenter.heroku.com/articles/sendgrid

[FILE:"/app/routes.js"]======================================================================================================
In order to capture and send feedback of custom error messages to the client|app, 
in this instance when validating the end-users' login credentials,
there were a few important steps outlined in the comments below.
-----------------------------------------------------------------------------------------------------------------------------
app.post('/login',function(req,res,done){//Wrap entire app.post request in a self-executing function while passing req, res & done parameters (see line #:90).
	passport.authenticate('local',function(err,user,info){//Using a callback function to intercept authentication-validation results... (retrieve parsed errors)
			if(!user){//If the user param, (the 2nd parameter) was set to false send error obj.
				res.send({error:true, error_type:info.message});//send the current error obj.
			}else{
				return req.login(user,function(err){//<------***Since we're using a custom callback function, it is required to manually invoke/execute a request.login() passing the user data as the 1st argument.
					if(err){
						return res.sendStatus(500);
					}
					done(null,user);//Now that we're logged the done(null,user) continues to the next express procedure, in this case invoking passport.serializeUser() in the '\server.js' file which parses the 'user' data and generates a cookie to maintain an active server-client session.
				});
			}
		})(req,res,done)},function(req,res){
			res.send({success:true});
		});

============================================================================================================================
[FILE:"/app/routes.js"](Server-side)
/*[PERSISTENCE'] app.post('/persist', ...)
	 * This is where the current data that is submitted from the end-user|client is captured, 
	 *parsed and update the accounts': 'todo', 'done' & 'save' fields in MongoDB*/
	app.post('/persist',parse_post,function(req,res,next){
		var current_data_g=null;
		//Query the 'Accounts' database collection to zero-in on and retrieve the data contained within an account associated with a matching UID.
		acct_schema.findOne({uid:req.body.uid},function(err,account){
			if(err){
				console.log(err);
			}else{/*The 'req.body.what' contains a string that is submitted to 
			       *identify what MongoDB document|record is being updated e.g('todos','done','save').*/
				var what=req.body.what;
				var str_json=req.body[what];//Store the stringified JSON Object that was submitted into a variable...
				/*Strip-away/replace any '$'|dollar symbols from the stringified JSON Object to avoid conflict with MongoDB way of interpreting '$' symbols as delimiters.
				*Then Decode|Parse submitted stringified JSON back to an actual JSON Object.*/
				var dec_json=JSON.parse(str_json.replace(/\$*/gm,''));
				if(what!='save_index'){
				console.log('what:',what,'task:',dec_json,'index:',dec_json.index);
				}else{
				console.log('what:',what,'task:',dec_json);
				}
				account.dynamic[what]=dec_json;//e.g(Accounts[UID]->Dynamic->[todo|done|save|save_index]
				account.save(function(err){
					if(err){
						console.log('_error',err);
						res.send({saved:false});
					}else{
						console.log('_saved');
						res.send({saved:true});
					}
				});
			}
		});
	});
============================================================================================================================
[FILE:"/public/js/services/services.js"](Client-side|"Works With The Server-side Persistence Code Above")
[Client-side Encoding|Stringifying {JSON_OBJECTS} Server-side Decoding|Parsing]=============================================
[Client-side|Application Encoding JSON Objects into Strings when it's either NaN (Not-a-Number) or 'typeof(task)' is = 'object', even '[]' (empty Array's)] 
|Otherwise| 
[If the value inside of 'task' IS a number do not use JSON.stringify(task), it'd would otherwise render 'undefined' it'd glitchout if it's a valid integer or float [etc..] ]
-----------------------------------------------------------------------------------------------------------------------------
	if(isNaN(task)||typeof(task)=='object'){//If the value passed to the 'task' parameter 'isNot-a-Number' or 'of_type_Object' i.e(A JSON Object)...
		serialized_data=("&uid="+$rootScope.uid+"&what="+what+"&"+what+"="+JSON.stringify(task));//The resulting stringified JSON Object will NOT evaluate to 'undefined'.
		}else{//Otherwise if the value passed to the 'task' parameter is a Number|Int|Float [etc..]...
		serialized_data=("&uid="+$rootScope.uid+"&what="+what+"&"+what+"="+task);//Use the raw value contained in the 'task' variable.
		}
		//alert('http_posting:'+serialized_data);
		http_post.with_this('/persist',serialized_data).then(function(ret){
			defer.resolve(ret);
		});
-----------------------------------------------------------------------------------------------------------------------------
[FILE:"/app/routes.js"]                                                                                                           ^
[Server-side|Decoding or Parsing the stringified JSON back into a JSON Object]----(referenced from the [PERSISTENCE] Block above_/|\)
*Then Decode|Parse submitted stringified JSON back to an actual JSON Object.*/
				var dec_json=JSON.parse(str_json.replace(/\$*/gm,''));
=============================================================================================================================

3lfist [4:47 PM] 
when i click sign up I want to be able to sign up with Facebook google and twitter

3lfist [4:47 PM]
can you add those buttons there?

3lfist [4:48 PM]
i can't sing up with email username and password method.

3lfist [4:49 PM]
i dont see error message when entering wrong password

3lfist [4:50 PM]
i will check it out more in depth later. been working hard at my other job because i got lazy lately and was on thin ice. but now everything is ok. scary to think i could loose that job now since i have family to take care of

nodeendo [6:45 PM] 
you did sign up :simple_smile:.... but i don't know you password only you do. usernames are always stored lowercase and they're case sensitive during login that could be why you thought that you couldn't register a todolog account and login... 
{
   "_id": {
       "$oid": "56294bc24d21970300203219"
   },
   "unruled_hash": "26eabd6adce9de5f0e21b85e5f0e6577909143de956f17411ae4cbecf7bc1f3616517f42c88f45c9d11d36cd0f57e476ebf0e3b942592fc41e93795eafb478bd",
   "salt": "4ae279660814036ee766b94c090181e0",
   "email": "3lfist@gmail.com",
   "username": "3lfist",
   "__v": 0
}
I'm know, I haven't yet worked on the logout, error msg feedback, I also will need to create a password reset and an email verification system some how for new accounts. It's just been about 3 weeks since I pushed a new revision, but creating accounts and logging in works.

nodeendo [6:57 PM] 
I thought you said that you wanted people to be prompted with an option to continue and create an account with todolog when they login with a social media acct for the first time... that is what that green message box is that you see when you login with google 
for the first time with todolog, i have it so that when they click the continue button 
it initializes their acct, then they won't be asked that msg again then after for that 
one acct... if they hit cancel they will be asked again if they decide to login again 
with their social media acct... just think of other websites  that use a social media 
login option they don't require a signup, they just say, signup with todolog or just 
login with an existing social media account.... most people would then prefer to just 
login then having to manually type in their account credentials more than once....

nodeendo [7:02 PM]
damn man, I can imagine how that can be scary, yeah you have a lot of responsibilities now :simple_smile:

----- October 23rd -----

3lfist [4:30 AM] 
yeah man but it's cool. it's better i have a job now in way. but i'd like us to get this app out in the open so we can profit from it

3lfist [4:30 AM]
so we should talk about how we will split profits

3lfist [4:31 AM]
which logo do you like for the app? i posted a few in #mainline

3lfist [4:33 AM] 
Getting back into Trello and will post new todos later. things that should be done

3lfist [4:34 AM]
you're right about the idea I said to make it so users can Sign up after pressing sign in. Still we need to offer Faacebook, Twitter and Google as a way to sign up.

3lfist [4:35 AM]
So on  '/signup' we need those 3 services  next to email/username/password sign up

3lfist [5:26 AM] 
I researched the UX best practices when it comes to Signing In and Signing Up and read that using both of those names together is bad so I'm changing Sign In to Log In and Sign Up can stay put.

3lfist [8:26 AM] 
I've installed Virtual Box and getting Ubuntu 15.10 on it because in my job I'm going to be doing some HTML coding soon. I'm looking forward into getting back into VIM.

----- October 24th -----

nodeendo [3:23 PM] 
k cool, just catching up on the updates

nodeendo [3:50 PM] 
hmmm... the logo... well... they look good but they don't look that serious, I mean they're interesting 
but the colors being used, most guys would then assume its an app is just for girls... I'm not the only 
one who would think that... But I like how you're trying to make people think differently :simple_smile:... 
but that's my opinion.... just think if you were in the google play or itunes app store and you never heard 
of champ or todolog and you just saw those icons I don't think the first thing that would come to mind 
is a motivational tool/day planner... you'd have to then pay for advertisers just to get it recognized 
for what it really is, if it was something like the Todolog mockup (the last one on the right, with the 
blue & white), people would feel more confident with what the app is advertising itself to be, it looks 
more legit and serious... but if you can somehow integrate the boxing glove even with a face but make 
it have like a motivated expression like someone who is determined, (like Shepard Fairey Obey) smiles 
are nice but people motivated people are not usually smiling when they're reaching a goal like in sports 
for example, i mean smiling happens after a goal has been achieved but when people open up the app to 
achieve goals they're not going to be smiling at first because they have to do work, but they should 
feel motivated and in order to

nodeendo [3:55 PM]
accomplish their tasks,  something that sort reminds the person of something that pisses them off and makes them want to solve, correct, or accomplish, something to prove others that they can....

nodeendo [3:58 PM]
this is just my perspective, I know you're the founder of this app and the root think-tank and manager of this project but this is my opinion...

nodeendo [4:02 PM]
I hope you also check out what I wrote in the mainline channel because I wrote a response there about something I thought was funny with what you said :simple_smile:... it's so weird...

nodeendo [4:05 PM]
I think it's cool that you're going to be doing HTML work at your new job... that's very good it sounds like you're already moving up :simple_smile:..

nodeendo [4:10 PM] 
I know you put a lot of time and work into those logo mockup's you created, I like the boxing theme concept we should definitely stick to that but I think more on the lines of Shepard Faireys' OBEY would work better...

nodeendo [4:27 PM] 
I'm going to check out those trello tasks now, I'll catch you later! :simple_smile:

nodeendo [4:42 PM] 
oh okay I just noticed you re-initialized the Trello board, that's cool... yeah better with a clean slate, 
I'm going to try to  make some bug fixes today we're going to have to talk more about the new signup layout. Just a thing to think about is we shouldn't have to be too concerned about the perfect UX layout for the first release we could always make changes later on too.

nodeendo [4:46 PM]
I think as long as it's user friendly enough with a short learning curve it should be fine.

----- October 25th -----

nodeendo [2:47 AM] 
k, just letting you know that I got the auth|Login-error-feedback/messages working again, but not for Signup
however, for some reason no native error codes are being passed as an argument in the mongoose save() method, 
don't know why so I haven't been able to parse MongoDB duplicate value|E11000 message with...

<db_schema>.save(function(error){
    if(error){ //<---MongoDB displays the correct error however Mongoose doesn't receive it... 
         if(error.code==11000){ 
         res.send({error:true,error_type:'exists'});
         }
   }
});
I'm going to have to probably submit this one to stackoverflow...
----- Yesterday October 26th, 2015 -----

3lfist [6:44 AM] 
Yes. Good idea. Definitely don't wait on it. You might end up going crazy.

3lfist [6:44 AM]
Yes boxing theme is fun and unique

3lfist [6:44 AM]
I didn't add any tasks.

3lfist [6:45 AM]
I will soon.

nodeendo [4:49 PM] 
k cool, it's alright that you haven't added any new tasks on trello, because I'm still working on replacing the old firebase functionality with mongo...
you know with the todo, done, save list persistence

----- Today October 27th, 2015 -----

3lfist [6:59 AM] 
yes. exactly. i don't want to over load ya with tasks. :simple_smile:

nodeendo [8:39 PM] 
k cool man, thank you for understanding, well just letting you know that we're now back to where we left off with the latest Firebase version we had about 3 weeks ago, but translated everything (even the, Todo, Done, & Save Lists) to now work with MongoDB with only 1 exception, the "Forgot your password?" option.... I'm thinking about using the SendGrid addon that Heroku provides free but with a limited amount of outgoing e-mail's.  I've used with with MySQL & PHP in the past, but I think they mention somewhere that it works with Node.js 
I'll also have to figure out a way to generate a temporary random alphanumerical password on the server-side be sent within the body of the e-mail message.