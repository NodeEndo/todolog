3lfist [7:20 AM] 
sWEET, oops. ok.

3lfist [7:34 AM] 
Ok well I see you allowed users to sign into Todolog via Google and Twitter. Currently Facebook is not working because it says it needs you to have a test account. Look

3lfist [7:36 AM] 
Also when I am signed in from my Twitter 3lfist account, it lets me actually make todos but since there is no real Todolog account associated with my Twitter account, when I sign out nothing is saved

nodeendo [10:59 AM] 
oh I see, I know what I did....

nodeendo [11:35 AM] 
I'm having internet connectivity probs...
Oh, good catch! I forgot to change'$rootScope.uid=authData.uid <---- should be $rootScope.uid=authData[provider].uid because with the other API data received from authData I have it e.g. $rootScope.email=authData[provider].email              I pass a string to the 'provider' variable/parameter to reuse the same code,
otherwise I'd have to write more unnecessary lines of code:
(authData.google.uid | authData.twitter.uid | authData.facebook.uid) [provider] in this case "google" was the access modifier for authData. Just need to change authData.uid to authData[provider].uid
Thanks for the heads up!

nodeendo [11:38 AM]
I've never heard of Forge!? what is it?

nodeendo [11:43 AM]
Facebook restricts other members from testing out the app because it's still in development and needs approval.
I'll add you as a developer what is your facebook id?

nodeendo [11:46 AM]
mine is for e.g., node.endo (with a '.' between each word, a number appended at the end may also exist).


3lfist [1:51 PM] 
Forge is where all the data is stored. like in the screen shot above.


nodeendo [5:20 PM] 
k cool, I'll add you as a developer & tester

nodeendo [5:21 PM]
oh okay, didn't know you had access to it, maybe I'm forgetting that you're the one who created the todolog database in the first place.

3lfist [6:21 PM] 
I'm still getting the same FB error as in screen shot.

3lfist [6:22 PM]
yup i sset up that firebase forge

nodeendo [11:15 PM] 
Okay, I'm confident that I added you as a Developer because your facebook profile pic is the same as the thumbnail which was loaded when I added you as a Developer....  it says (pending) next to your name you may have to check your e-mail inbox associated with that profile of yours to confirm or something. idk...

nodeendo [11:18 PM]
Okay when I added you as a Tester just now it dropped you from the Developer section and there is no 'pending' next to your name.... let me know if you got any confirmation emails and I'll add you back to the developer list so you can get a new confirmation email sent if that was the problem, idk why it said pending next to your icon in the Developer section.

---------------------------------------
ADDITIONS: Password Reset Request - Change Password Form
---------------------------------------
Created a "Forgot your password?" link in the '#/login/'
view|form that requests a 24hr temporary password
to be E-mailed to the E-mail address associated
with that Todolog account. It's in HTML format 
and contains an optional link that redirects directly to the '#/settings/' 
view which has a 'change password form' enabling to skip login. 
This is where the end-user/client can type in their E-mail address, 
current|24 hour temporary password and a new password and uses
the same password regEx validation rules as the '#/signup/' 
view|form. 
---------------------------------------
BUGFIXES:
---------------------------------------
Fixed that UID issue, Firebase for some reason
wasn't returning a valid JSON object, it doesn't
have propper delimiter's like ("{google":"219393823929}"), instead it was a string like ("google:219393823929") without any tokens besides the ':'. So by default using the data returned in authData[provider].uid, the uid wasn't 219393823929, but instead google:219393823929
had to parse the string by splitting it into an array I named 'tmp_uid' using the ':' as a token/delimiter, to extract the uid 219393823929.

//Extract API UID			
var tmp_uid_str=JSON.stringify(authData.uid);		var tmp_uid=tmp_uid_str.split(':');
$rootScope.uid=tmp_uid[1];
//#############################################

---------------------------------------
'Save List' items can now be edited and or removed whilist they have no 'todo' and/or 'done' items. Before this fix, the app would stall and discontinue executing after a 'Save List' item had been submitted with all tasks 'Done' or all tasks in 'Todo' or no tasks at all. This was due to trying to iterate through 
non-existent items in 'Todo' & 'Done' list arrays within 
a 'Save List' item, all I had to do was wrap an 'if' statement 
around the jQuery $.each(array,function(index, value){}); 
loop, the 'if' statement would only execute the $.each() 
loop if the condition evaluated to true, in this case the 
condition was... 	

path.days[item_index].todos!=null //Evaluates true, if 'todos' is not = to null (empty).
path.days[item_index].done!=null

---------------------------------------
App reinitializes on 'Logout' using jQuery's location.reload() then redirects to the '/splash' page. Before this fix, if somone registered separate accounts with different providers, (E-mail & Password, Google, Facebook, Twitter) then logged into one, made some edits, created their list then logged out... what would happen if they had logged into a different account without a page-refreshed beforhand, the the data stored in the variables from the previous login session would not have been cleared and would display, there would be no way to remove it because what was displayed wouldn't reflect what is actually stored in their table in the database, it'd cause a conflict (woudn't be able to edit or remove any entries). 

$timeout(function(){//Pause for 2000 milliseconds or 2 seconds, then...location.reload();//do a page refresh to reinitialize the entire App.
$scope.$apply($location.path('splash'));//The redirect to the Splash view.
},2000);